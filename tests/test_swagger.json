{
  "basePath": "/api/v1",
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "FirstDefinition": {
      "properties": {
        "directRef": {
          "$ref": "#/definitions/SecondDefinition"
        },
        "name": {
          "example": "hello world",
          "type": "string"
        },
        "year": {
          "example": "Some example text",
          "maximum": 2050,
          "minimum": 1999,
          "type": "integer",
          "format": "int32",
          "pattern": "^\\d+$",
          "x-field-name": "fromYear"
        },
        "arrayOfStrings": {
          "items": {
            "type": "string",
            "format": "uuid"
          },
          "minItems": 123,
          "type": "array",
          "uniqueItems": true
        },
        "arrayOfDef": {
          "items": {
            "$ref": "#/definitions/SecondDefinition"
          },
          "type": "array",
          "maxItems": 50
        },
        "arrayOfObject": {
          "items": {
            "properties": {
              "id": {
                "example": 2,
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ],
            "type": "object"
          },
          "type": "array",
          "description": "An array of object"
        }
      },
      "required": [
        "name",
        "year",
        "arrayOfObject"
      ],
      "type": "object"
    },
    "SecondDefinition": {
      "properties": {
        "name": {
          "example": "another def",
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "Friends": {
      "properties": {
        "friends": {
          "items": {
            "properties": {
              "uuid": {
                "example": "123e4567-e89b-12d3-a456-426614174000",
                "type": "uuid"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "uuid"
            ],
            "description": "A friend is composed of an uuid and a name",
            "type": "object"
          },
          "type": "array",
          "description": "An array of friends"
        }
      },
      "required": [
        "friends"
      ],
      "type": "object"
    }
  },
  "paths": {
    "/users/{userId}": {
      "get": {
        "summary": "Returns a user by ID.",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "minimum": 1,
            "description": "Parameter description in Markdown."
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "Create a user.",
        "parameters": [
          {
            "in": "query",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Name of the user."
          },
          
          {
            "in": "body",
            "name": "user",
            "description": "The user description.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "required": false,
                  "type": "string",
                  "format": "email",
                  "description": "Email of the user."
                },
                "password": {
                  "required": true,
                  "schema": {
                    "type": "string",
                    "format": "password"
                  },
                  "description": "Password of the user."
                },
                "friends": {
                  "schema": {
                    "$ref": "#/definitions/Friends"
                  },
                  "required": false,
                  "description": "Friends list."
                },
                "contributions": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "example": 2,
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "description": "Object list."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/my-project": {
      "post": {
        "operationId": "my_projects.search_projects",
        "parameters": [
          {
            "in": "body",
            "name": "my_projects_request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MyProjectsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MyProjectsResponse"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found. Try to change your criteria."
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "summary": "My Projects endpoint",
        "tags": [
          "My Projects"
        ],
        "x-is-public": true,
        "x-scopes": [
          "search_my_projects"
        ],
        "x-supports-projects-restriction": true
      }
    }
  }
}